name: Smoke Test Latest Provider Release
on:
  repository_dispatch:
    types:
    - smoke-test-provider
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: public
  ARM_LOCATION: westus
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AWS_ACCESS_KEY_ID: " ${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_REGION: us-west-2
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  GOOGLE_CI_SERVICE_ACCOUNT_EMAIL: pulumi-ci@pulumi-ci-gcp-provider.iam.gserviceaccount.com
  GOOGLE_CI_WORKLOAD_IDENTITY_POOL: pulumi-ci
  GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER: pulumi-ci
  GOOGLE_PROJECT: pulumi-ci-gcp-provider
  GOOGLE_PROJECT_NUMBER: "895284651812"
  GOOGLE_REGION: us-central1
  GOOGLE_ZONE: us-central1-a
  PACKET_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
  PROVIDER_TESTS_TAG: ${{ github.event.client_payload.ref }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  dotnet-unit-testing:
    name: Running ${{ matrix.source-dir }} test
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - run: dotnet test
      working-directory: ${{ matrix.source-dir }}
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
        - 6.0.114
        platform:
        - ubuntu-latest
        source-dir:
        - testing-unit-cs
        - testing-unit-cs-mocks
        - testing-unit-fs-mocks
  go-unit-testing:
    name: Running ${{ matrix.source-dir }} test
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - run: go test
      working-directory: ${{ matrix.source-dir }}
    strategy:
      fail-fast: false
      matrix:
        goversion:
        - 1.21.x
        platform:
        - ubuntu-latest
        source-dir:
        - testing-unit-go
  kubernetes:
    name: smoke-test-kubernetes-provider
    needs: test-infra-setup
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install aws-iam-authenticator
      run: >-
        curl -o aws-iam-authenticator
        https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator

        chmod +x ./aws-iam-authenticator

        sudo mv aws-iam-authenticator /usr/local/bin
    - name: Install Kubectl
      run: >-
        curl -LO
        https://storage.googleapis.com/kubernetes-release/release/$(curl -s
        https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

        chmod +x ./kubectl

        sudo mv kubectl /usr/local/bin
    - name: Install + Configure Helm
      run: >-
        curl -o- -L
        https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
        bash

        helm init -c

        helm repo add bitnami https://charts.bitnami.com/bitnami
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        install_components: gke-gcloud-auth-plugin
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: examples@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
      with:
        pulumi-version: ${{ env.PULUMI_VERSION != '' && format('v{0}', env.PULUMI_VERSION) || null }}
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - name: Install Go Dependencies
      run: make ensure
    - name: Setup Config
      run: >-
        mkdir -p "$HOME/.kube/"

        pulumi stack -s "${{ github.sha }}-${{ github.run_number }}" -C misc/scripts/testinfra/ output --show-secrets kubeconfig >~/.kube/config
    - name: Run Kubernetes Smoke Tests
      run: make specific_tag_set TagSet=Kubernetes
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
        - 6.0.114
        goversion:
        - 1.21.x
        nodeversion:
        - 18.x
        platform:
        - ubuntu-latest
        pythonversion:
        - 3.9
  providers:
    name: smoke-test-providers
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install aws-iam-authenticator
      run: >-
        curl -o aws-iam-authenticator
        https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator

        chmod +x ./aws-iam-authenticator

        sudo mv aws-iam-authenticator /usr/local/bin
    - name: Install Kubectl
      run: >-
        curl -LO
        https://storage.googleapis.com/kubernetes-release/release/$(curl -s
        https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

        chmod +x ./kubectl

        sudo mv kubectl /usr/local/bin
    - name: Install + Configure Helm
      run: >-
        curl -o- -L
        https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
        bash

        helm init -c

        helm repo add bitnami https://charts.bitnami.com/bitnami
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        install_components: gke-gcloud-auth-plugin
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: examples@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
      with:
        pulumi-version: ${{ env.PULUMI_VERSION != '' && format('v{0}', env.PULUMI_VERSION) || null }}
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - name: Install Testing Dependencies
      run: make ensure
    - name: Running ${{ env.PROVIDER_TESTS_TAG }}${{ matrix.languages }} Smoke Tests
      run: make specific_tag_set TestSet=${{ matrix.languages }} TagSet=${{
        env.PROVIDER_TESTS_TAG }}
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
        - 6.0.114
        goversion:
        - 1.21.x
        languages:
        - Cs
        - Js
        - Ts
        - Py
        - Fs
        nodeversion:
        - 168x
        platform:
        - ubuntu-latest
        pythonversion:
        - 3.9
  python-unit-testing:
    name: Running ${{ matrix.source-dir }} test
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - run: |-
        python3 -m venv venv
        source venv/bin/activate
        pip3 install -r requirements.txt
        python -m unittest
      working-directory: ${{ matrix.source-dir }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - ubuntu-latest
        pythonversion:
        - 3.9
        source-dir:
        - testing-unit-py
  test-infra-destroy:
    name: test-infra-destroy
    needs: kubernetes
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install aws-iam-authenticator
      run: >-
        curl -o aws-iam-authenticator
        https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator

        chmod +x ./aws-iam-authenticator

        sudo mv aws-iam-authenticator /usr/local/bin
    - name: Install Kubectl
      run: >-
        curl -LO
        https://storage.googleapis.com/kubernetes-release/release/$(curl -s
        https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

        chmod +x ./kubectl

        sudo mv kubectl /usr/local/bin
    - name: Install + Configure Helm
      run: >-
        curl -o- -L
        https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
        bash

        helm init -c

        helm repo add bitnami https://charts.bitnami.com/bitnami
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        install_components: gke-gcloud-auth-plugin
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: examples@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - name: Destroy test infra
      run: make destroy_test_infra StackName="${{ github.sha }}-${{ github.run_number }}"
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
        - 6.0.114
        goversion:
        - 1.21.x
        nodeversion:
        - 18.x
        platform:
        - ubuntu-latest
        pythonversion:
        - 3.9
  test-infra-setup:
    name: test-infra-setup
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install aws-iam-authenticator
      run: >-
        curl -o aws-iam-authenticator
        https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator

        chmod +x ./aws-iam-authenticator

        sudo mv aws-iam-authenticator /usr/local/bin
    - name: Install Kubectl
      run: >-
        curl -LO
        https://storage.googleapis.com/kubernetes-release/release/$(curl -s
        https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

        chmod +x ./kubectl

        sudo mv kubectl /usr/local/bin
    - name: Install + Configure Helm
      run: >-
        curl -o- -L
        https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
        bash

        helm init -c

        helm repo add bitnami https://charts.bitnami.com/bitnami
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        install_components: gke-gcloud-auth-plugin
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: examples@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - name: Create Test Infrastructure
      run: make setup_test_infra StackName="${{ github.sha }}-${{ github.run_number }}"
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
        - 6.0.114
        goversion:
        - 1.21.x
        nodeversion:
        - 18.x
        platform:
        - ubuntu-latest
        pythonversion:
        - 3.9
  ts-unit-testing:
    name: Running ${{ matrix.source-dir }} test
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: dev
    - name: Print CLI version
      run: echo "Currently Pulumi $(pulumi version) is installed"
    - run: |-
        npm install
        npm install --global mocha
        npm install --global ts-node
        mocha -r ts-node/register ec2tests.ts
        mocha -r ts-node/register bucket_pair_test.ts
      working-directory: ${{ matrix.source-dir }}/mocha
    strategy:
      fail-fast: false
      matrix:
        nodeversion:
        - 16.x
        platform:
        - ubuntu-latest
        source-dir:
        - testing-unit-ts
